#include <iostream>
#include <iomanip>
#include<armadillo>

using namespace std;
using namespace arma;


void runSolver(const int nParticles, const int Z, int nStates);
double calcEnergy(const int nParticles, const int nStates, const int Z, const mat C, const field<mat> Q);
double onebodyElement(const int Z, const int alpha, const int beta);
double twobodyElement(const field<mat> Q, int alpha, int beta, int gamma, int delta);
field<mat> setupTwobodyElements(const double Z);
int mapStateToPrincipleQuantumNumber(const int state);

int main()
{
    cout << "----HF solver----" << endl;

    //System configuration
    int nParticles = 4;
    int Z = nParticles;
    int nStates = 8;

    runSolver(nParticles, Z, nStates);

    return 0;
}

void runSolver(const int nParticles, const int Z, int nStates)
{
    int HFIterations = 100;
    double threshold = 1e-8;


    double interaction;
    mat H;
    vec e = zeros(nStates, 1);
    vec ePrev = zeros(nStates, 1);
    mat C = eye(nStates, nStates);
    vec diff;

    field<mat> Q =  setupTwobodyElements(Z);

    //HF loop
    int hfIt = 0;

    while(hfIt < HFIterations){
        cout << "iteration = " << hfIt << endl;

        H = zeros(nStates, nStates);

        for(int alpha = 0; alpha < nStates; alpha++){
            for(int beta = 0; beta < nStates; beta++){

                interaction = 0;
                for(int i = 0; i <nParticles; i++){
                    for(int gamma = 0; gamma < nStates; gamma++){
                        for(int delta = 0; delta < nStates; delta++){

                            interaction += C(i,gamma) * C(i,delta)* twobodyElement(Q, alpha, beta, gamma, delta);
                        }
                    }
                }
                H(alpha, beta) = onebodyElement(Z, alpha, beta) + interaction;
            }

        }

        //Computing the HF eigenvalue problem
        eig_sym(e,C,H);
        C = trans(C);
        hfIt++;

        //convergence test
        diff = e - ePrev;
        if (abs(diff.max() < threshold))
            break;
        ePrev = e;

    }

    //calculate the energy
    double E0 = calcEnergy(nParticles,nStates, Z, C, Q);
    cout <<setprecision(8) <<"Final energy E = " << E0 << " after " << hfIt <<
            " iterations, error "  << threshold << endl;
}

double twobodyElement(const field<mat> Q, int alpha, int beta, int gamma, int delta)
{

    double directTerm = 0;
    double exchangeTerm = 0;
    int n1 = mapStateToPrincipleQuantumNumber(alpha) - 1;
    int n2 = mapStateToPrincipleQuantumNumber(beta)  - 1;
    int n3 = mapStateToPrincipleQuantumNumber(gamma) - 1;
    int n4 = mapStateToPrincipleQuantumNumber(delta) - 1;

    if(pow(-1,alpha) == pow(-1,beta) && pow(-1,gamma) == pow(-1,delta)) {
        directTerm  += Q(n1, n3)(n2, n4);
    }
    if(pow(-1,alpha) == pow(-1,delta) && pow(-1,beta) == pow(-1,gamma)) {
        exchangeTerm -= Q(n1, n3)(n4, n2);
    }

    return directTerm + exchangeTerm ;
}


double calcEnergy(const int nParticles, const int nStates, const int Z, const mat C, const field<mat> Q)
{
    double E0 = 0;

    //The one-body term:
    for (int i = 0; i < nParticles; i++){
        for (int alpha = 0; alpha < nStates; alpha++){
            E0 += C(i,alpha)*C(i,alpha)*onebodyElement(Z, alpha, alpha);
        }
    }

    //The two-body term:
    for (int i = 0; i < nParticles; i++){
        for(int j = 0; j < nParticles; j++){

            for (int alpha = 0; alpha < nStates; alpha++){
                for (int beta = 0; beta < nStates; beta++){
                    for (int gamma = 0; gamma < nStates; gamma++){
                        for (int delta = 0; delta < nStates; delta++){

                            double ECoulumb=twobodyElement(Q,alpha, beta, delta, gamma);
                            E0 += 0.5*C(i,alpha)*C(j,gamma)*C(i,beta)*C(j,delta)*ECoulumb;
                        }
                    }

                }
            }
        }
    }

    return E0;
}

double onebodyElement(const int Z, const int alpha, const int beta)
{
    double result;

    if(alpha==beta){
        int n = mapStateToPrincipleQuantumNumber(alpha);
        result = -Z*Z/(2.0 * n * n);
    }else{
        result = 0.0;
    }

    return result;

}

int mapStateToPrincipleQuantumNumber(const int state)
{
    vec map;
    map << 1 << 1 << 2 << 2 << 3 << 3 << 4 << 4;

    int n = map(state);
    return n;
}


field<mat> setupTwobodyElements(const double Z)
{
    //Initilize a field object consisting om mat objects
    field<mat> Q;
    Q.set_size(4, 4);
    for(int i = 0; i < 4; i++){
        for(int j = 0; j < 4; j++){
            Q(i,j) = zeros(4,4);
        }
    }

    Q(0,0)( 0,0 )= 5*Z/8;
    Q(0,0)( 0,1 )= 4096*sqrt(2)*Z/64827;
    Q(0,0)(0,2 )= 1269*sqrt(3)*Z/50000;
    Q(0,0)( 0,3 )= 416415744*Z/15083778125;
    Q(0,0)( 1,0 )= 4096*sqrt(2)*Z/64827;
    Q(0,0)( 1,1 )= 16*Z/729;
    Q(0,0)( 1,2 )= 110592*sqrt(6)*Z/24137569;
    Q(0,0)( 1,3 )= 98304*sqrt(2)*Z/19487171;
    Q(0,0)( 2,0)= 1269*sqrt(3)*Z/50000;
    Q(0,0)( 2,1 )= 110592*sqrt(6)*Z/24137569;
    Q(0,0)( 2,2 )= 189*Z/32768;
    Q(0,0)( 2,3 )= 1808400384*sqrt(3)*Z/852891037441;
    Q(0,0)( 3,0 )= 416415744*Z/15083778125;
    Q(0,0)( 3,1 )= 98304*sqrt(2)*Z/19487171;
    Q(0,0)( 3,2 )= 1808400384*sqrt(3)*Z/852891037441;
    Q(0,0)( 3,3)= 22848*Z/9765625;
    Q(0,1)( 0,0 )= 4096*sqrt(2)*Z/64827;
    Q(0,1)( 0,1 )= 17*Z/81;
    Q(0,1)( 0,2 )= 1555918848*sqrt(6)*Z/75429903125;
    Q(0,1)( 0,3 )= 288456704*sqrt(2)*Z/14206147659;
    Q(0,1)( 1,0 )= 16*Z/729;
    Q(0,1)( 1,1 )= 512*sqrt(2)*Z/84375;
    Q(0,1)( 1,2 )= 2160*sqrt(3)*Z/823543;
    Q(0,1)( 1,3 )= 376832*Z/129140163;
    Q(0,1)( 2,0)= 110592*sqrt(6)*Z/24137569;
    Q(0,1)( 2,1 )= 29943*sqrt(3)*Z/13176688;
    Q(0,1)( 2,2 )= 1216512*sqrt(2)*Z/815730721;
    Q(0,1)( 2,3 )= 423788544*sqrt(6)*Z/762939453125;
    Q(0,1)( 3,0 )= 98304*sqrt(2)*Z/19487171;
    Q(0,1)( 3,1 )= 108838912*Z/44840334375;
    Q(0,1)( 3,2 )= 10148806656*sqrt(6)*Z/19073486328125;
    Q(0,1)(3,3)= 39*Z/32768*sqrt(2);
    Q(0,2)(0,0 )= 1269*sqrt(3)*Z/50000;
    Q(0,2)(0,1 )= 1555918848*sqrt(6)*Z/75429903125;
    Q(0,2)( 0,2 )= 815*Z/8192;
    Q(0,2)( 0,3 )= 11694850770862080*sqrt(3)*Z/702392443647273463;
    Q(0,2)( 1,0 )= 110592*sqrt(6)*Z/24137569;
    Q(0,2)( 1,1 )= 2160*sqrt(3)*Z/823543;
    Q(0,2)( 1,2 )= 37826560*sqrt(2)*Z/22024729467;
    Q(0,2)( 1,3 )= 487489536*sqrt(6)*Z/762939453125;
    Q(0,2)( 2,0)= 189*Z/32768;
    Q(0,2)( 2,1 )= 1216512*sqrt(2)*Z/815730721;
    Q(0,2)( 2,2 )= 617*Z/314928*sqrt(3);
    Q(0,2)( 2,3 )= 30254432256*Z/41426511213649;
    Q(0,2)( 3,0 )= 1808400384*sqrt(3)*Z/852891037441;
    Q(0,2)( 3,1 )= 10148806656*sqrt(6)*Z/19073486328125;
    Q(0,2)( 3,2 )= 90581886173184*Z/129457847542653125;
    Q(0,2)( 3,3)= 74450880*sqrt(3)*Z/285311670611;
    Q(0,3)( 0,0 )= 416415744*Z/15083778125;
    Q(0,3)( 0,1 )= 288456704*sqrt(2)*Z/14206147659;
    Q(0,3)( 0,2 )= 11694850770862080*sqrt(3)*Z/702392443647273463;
    Q(0,3)( 0,3 )= 22513*Z/390625;
    Q(0,3)( 1,0 )= 98304*sqrt(2)*Z/19487171;
    Q(0,3)( 1,1 )= 376832*Z/129140163;
    Q(0,3)( 1,2 )= 487489536*sqrt(6)*Z/762939453125;
    Q(0,3)( 1,3 )= 5053*Z/3538944*sqrt(2);
    Q(0,3)( 2,0)= 1808400384*sqrt(3)*Z/852891037441;
    Q(0,3)( 2,1 )= 423788544*sqrt(6)*Z/762939453125;
    Q(0,3)( 2,2 )= 30254432256*Z/41426511213649;
    Q(0,3)( 2,3 )= 1243165779*sqrt(3)*Z/4564986729776;
    Q(0,3)( 3,0 )= 22848*Z/9765625;
    Q(0,3)( 3,1 )= 39*Z/32768*sqrt(2);
    Q(0,3)( 3,2 )= 74450880*sqrt(3)*Z/285311670611;
    Q(0,3)( 3,3)= 1804351488*Z/6179146071875;
    Q(1,0)( 0,0 )= 4096*sqrt(2)*Z/64827;
    Q(1,0)( 0,1 )= 16*Z/729;
    Q(1,0)( 0,2 )= 110592*sqrt(6)*Z/24137569;
    Q(1,0)( 0,3 )= 98304*sqrt(2)*Z/19487171;
    Q(1,0)(1,0 )= 17*Z/81;
    Q(1,0)(1,1 )= 512*sqrt(2)*Z/84375;
    Q(1,0)( 1,2 )= 29943*sqrt(3)*Z/13176688;
    Q(1,0)( 1,3 )= 108838912*Z/44840334375;
    Q(1,0)( 2,0)= 1555918848*sqrt(6)*Z/75429903125;
    Q(1,0)( 2,1 )= 2160*sqrt(3)*Z/823543;
    Q(1,0)( 2,2 )= 1216512*sqrt(2)*Z/815730721;
    Q(1,0)( 2,3 )= 10148806656*sqrt(6)*Z/19073486328125;
    Q(1,0)( 3,0 )= 288456704*sqrt(2)*Z/14206147659;
    Q(1,0)( 3,1 )= 376832*Z/129140163;
    Q(1,0)( 3,2 )= 423788544*sqrt(6)*Z/762939453125;
    Q(1,0)( 3,3)= 39*Z/32768*sqrt(2);
    Q(1,1)( 0,0 )= 16*Z/729;
    Q(1,1)( 0,1 )= 512*sqrt(2)*Z/84375;
    Q(1,1)( 0,2 )= 2160*sqrt(3)*Z/823543;
    Q(1,1)( 0,3 )= 376832*Z/129140163;
    Q(1,1)( 1,0 )= 512*sqrt(2)*Z/84375;
    Q(1,1)(1,1 )= 77*Z/512;
    Q(1,1)( 1,2 )= 5870679552*sqrt(6)*Z/669871503125;
    Q(1,1)( 1,3 )= 31363072*sqrt(2)*Z/4202539929;
    Q(1,1)( 2,0)= 2160*sqrt(3)*Z/823543;
    Q(1,1)( 2,1 )= 5870679552*sqrt(6)*Z/669871503125;
    Q(1,1)( 2,2 )= 73008*Z/9765625;
    Q(1,1)( 2,3 )= 14739259392*sqrt(3)*Z/6131066257801;
    Q(1,1)( 3,0 )= 376832*Z/129140163;
    Q(1,1)( 3,1 )= 31363072*sqrt(2)*Z/4202539929;
    Q(1,1)( 3,2 )= 14739259392*sqrt(3)*Z/6131066257801;
    Q(1,1)( 3,3)= 424*Z/177147;
    Q(1,2)( 0,0 )= 110592*sqrt(6)*Z/24137569;
    Q(1,2)( 0,1 )= 2160*sqrt(3)*Z/823543;
    Q(1,2)( 0,2 )= 37826560*sqrt(2)*Z/22024729467;
    Q(1,2)( 0,3 )= 487489536*sqrt(6)*Z/762939453125;
    Q(1,2)( 1,0 )= 29943*sqrt(3)*Z/13176688;
    Q(1,2)( 1,1 )= 5870679552*sqrt(6)*Z/669871503125;
    Q(1,2)( 1,2 )= 32857*Z/390625;
    Q(1,2)( 1,3 )= 55508689880137728*sqrt(3)*Z/5049196699148208943;
    Q(1,2)( 2,0)= 1216512*sqrt(2)*Z/815730721;
    Q(1,2)( 2,1 )= 73008*Z/9765625;
    Q(1,2)( 2,2 )= 6890942464*sqrt(2./3)*Z/1210689028125;
    Q(1,2)( 2,3 )= 69158928384*sqrt(2.)*Z/34271896307633;
    Q(1,2)( 3,0 )= 423788544*sqrt(6)*Z/762939453125;
    Q(1,2)( 3,1 )= 14739259392*sqrt(3)*Z/6131066257801;
    Q(1,2)( 3,2 )= 36645380390912*sqrt(2)*Z/24984212408264457;
    Q(1,2)( 3,3)= 145503*sqrt(3/2)*Z/134217728;
    Q(1,3)( 0,0 )= 98304*sqrt(2)*Z/19487171;
    Q(1,3)( 0,1 )= 376832*Z/129140163;
    Q(1,3)(0,2 )= 487489536*sqrt(6)*Z/762939453125;
    Q(1,3)( 0,3 )= 5053*Z/3538944*sqrt(2);
    Q(1,3)( 1,0 )= 108838912*Z/44840334375;
    Q(1,3)( 1,1 )= 31363072*sqrt(2)*Z/4202539929;
    Q(1,3)( 1,2 )= 55508689880137728*sqrt(3)*Z/5049196699148208943;
    Q(1,3)( 1,3 )= 4043*Z/78732;
    Q(1,3)( 2,0)= 10148806656*sqrt(6)*Z/19073486328125;
    Q(1,3)( 2,1 )= 14739259392*sqrt(3)*Z/6131066257801;
    Q(1,3)( 2,2 )= 69158928384*sqrt(2)*Z/34271896307633;
    Q(1,3)( 2,3 )= 2496169683*sqrt(3/2)*Z/1677721600000;
    Q(1,3)( 3,0 )= 39*Z/32768*sqrt(2);
    Q(1,3)( 3,1 )= 424*Z/177147;;
    Q(1,3)( 3,2 )= 145503*sqrt(3/2)*Z/134217728;;
    Q(1,3)( 3,3)= 21252608*sqrt(2)*Z/35595703125;
    Q(2,0)( 0,0 )= 1269*sqrt(3)*Z/50000;
    Q(2,0)( 0,1 )= 110592*sqrt(6)*Z/24137569;
    Q(2,0)( 0,2 )= 189*Z/32768;
    Q(2,0)( 0,3 )= 1808400384*sqrt(3)*Z/852891037441;
    Q(2,0)( 1,0 )= 1555918848*sqrt(6)*Z/75429903125;
    Q(2,0)( 1,1 )= 2160*sqrt(3)*Z/823543;
    Q(2,0)( 1,2 )= 1216512*sqrt(2)*Z/815730721;
    Q(2,0)( 1,3 )= 10148806656*sqrt(6)*Z/19073486328125;
    Q(2,0)( 2,0)= 815*Z/8192;
    Q(2,0)( 2,1 )= 37826560*sqrt(2)*Z/22024729467;
    Q(2,0)( 2,2 )= 617*Z/314928*sqrt(3);
    Q(2,0)( 2,3 )= 90581886173184*Z/129457847542653125;
    Q(2,0)( 3,0 )= 11694850770862080*sqrt(3)*Z/702392443647273463;
    Q(2,0)( 3,1 )= 487489536*sqrt(6)*Z/762939453125;
    Q(2,0)( 3,2 )= 30254432256*Z/41426511213649;
    Q(2,0)( 3,3)= 74450880*sqrt(3)*Z/285311670611;
    Q(2,1)( 0,0 )= 110592*sqrt(6)*Z/24137569;
    Q(2,1)( 0,1 )= 29943*sqrt(3)*Z/13176688;
    Q(2,1)( 0,2 )= 1216512*sqrt(2)*Z/815730721;
    Q(2,1)( 0,3 )= 423788544*sqrt(6)*Z/762939453125;
    Q(2,1)( 1,0 )= 2160*sqrt(3)*Z/823543;
    Q(2,1)( 1,1 )= 5870679552*sqrt(6)*Z/669871503125;
    Q(2,1)( 1,2 )= 73008*Z/9765625;
    Q(2,1)( 1,3 )= 14739259392*sqrt(3)*Z/6131066257801;
    Q(2,1)( 2,0)= 37826560*sqrt(2)*Z/22024729467;
    Q(2,1)( 2,1 )= 32857*Z/390625;
    Q(2,1)( 2,2 )= 6890942464*sqrt(2./3.)*Z/1210689028125;
    Q(2,1)( 2,3 )= 36645380390912*sqrt(2)*Z/24984212408264457;
    Q(2,1)( 3,0 )= 487489536*sqrt(6)*Z/762939453125;
    Q(2,1)( 3,1 )= 55508689880137728*sqrt(3)*Z/5049196699148208943;
    Q(2,1)( 3,2 )= 69158928384*sqrt(2)*Z/34271896307633;
    Q(2,1)( 3,3)= 145503*sqrt(3/2)*Z/134217728;
    Q(2,2)( 0,0 )= 189*Z/32768;
    Q(2,2)(0,1 )= 1216512*sqrt(2)*Z/815730721;
    Q(2,2)( 0,2 )= 617*Z/314928*sqrt(3);
    Q(2,2)( 0,3 )= 30254432256*Z/41426511213649;
    Q(2,2)( 1,0 )= 1216512*sqrt(2)*Z/815730721;
    Q(2,2)( 1,1 )= 73008*Z/9765625;
    Q(2,2)( 1,2 )= 6890942464*sqrt(2./3)*Z/1210689028125;
    Q(2,2)(1,3 )= 69158928384*sqrt(2)*Z/34271896307633;
    Q(2,2)( 2,0)= 617*Z/314928*sqrt(3);
    Q(2,2)( 2,1 )= 6890942464*sqrt(2./3)*Z/1210689028125;
    Q(2,2)( 2,2 )= 17*Z/256;
    Q(2,2)( 2,3 )= 2486755845603328*Z/158298797548828125*sqrt(3);
    Q(2,2)( 3,0 )= 30254432256*Z/41426511213649;
    Q(2,2)( 3,1 )= 69158928384*sqrt(2)*Z/34271896307633;
    Q(2,2)( 3,2 )= 2486755845603328*Z/158298797548828125*sqrt(3);
    Q(2,2)( 3,3)= 2560158144*Z/678223072849;
    Q(2,3)( 0,0 )= 1808400384*sqrt(3)*Z/852891037441;
    Q(2,3)( 0,1 )= 423788544*sqrt(6)*Z/762939453125;
    Q(2,3)( 0,2 )= 30254432256*Z/41426511213649;
    Q(2,3)( 0,3 )= 1243165779*sqrt(3)*Z/4564986729776;
    Q(2,3)( 1,0 )= 10148806656*sqrt(6)*Z/19073486328125;
    Q(2,3)( 1,1 )= 14739259392*sqrt(3)*Z/6131066257801;
    Q(2,3)( 1,2 )= 69158928384*sqrt(2)*Z/34271896307633;
    Q(2,3)( 1,3 )= 2496169683*sqrt(3/2)*Z/1677721600000;
    Q(2,3)(2,0)= 90581886173184*Z/129457847542653125;
    Q(2,3)( 2,1 )= 36645380390912*sqrt(2)*Z/24984212408264457;
    Q(2,3)( 2,2 )= 2486755845603328*Z/158298797548828125*sqrt(3);
    Q(2,3)( 2,3 )= 621550729*Z/13841287201;
    Q(2,3)( 3,0 )= 74450880*sqrt(3)*Z/285311670611;
    Q(2,3)( 3,1 )= 145503*sqrt(3/2)*Z/134217728;
    Q(2,3)( 3,2 )= 2560158144*Z/678223072849;
    Q(2,3)(3,3)= 413631006610176000.0*sqrt(3.0)*Z/249430673908303812379.0;
    Q(3,0)( 0,0 )= 416415744*Z/15083778125;
    Q(3,0)( 0,1 )= 98304*sqrt(2)*Z/19487171;
    Q(3,0)( 0,2 )= 1808400384*sqrt(3)*Z/852891037441;
    Q(3,0)( 0,3 )= 22848*Z/9765625;
    Q(3,0)( 1,0 )= 288456704*sqrt(2)*Z/14206147659;
    Q(3,0)( 1,1 )= 376832*Z/129140163;
    Q(3,0)( 1,2 )= 423788544*sqrt(6)*Z/762939453125;
    Q(3,0)( 1,3 )= 39*Z/32768*sqrt(2);
    Q(3,0)( 2,0)= 11694850770862080*sqrt(3)*Z/702392443647273463;
    Q(3,0)( 2,1 )= 487489536*sqrt(6)*Z/762939453125;
    Q(3,0)( 2,2 )= 30254432256*Z/41426511213649;
    Q(3,0)( 2,3 )= 74450880*sqrt(3)*Z/285311670611;
    Q(3,0)( 3,0 )= 22513*Z/390625;
    Q(3,0)( 3,1 )= 5053*Z/3538944*sqrt(2);
    Q(3,0)( 3,2 )= 1243165779*sqrt(3)*Z/4564986729776;
    Q(3,0)( 3,3)= 1804351488*Z/6179146071875;
    Q(3,1)( 0,0 )= 98304*sqrt(2)*Z/19487171;
    Q(3,1)( 0,1 )= 108838912*Z/44840334375;
    Q(3,1)( 0,2 )= 10148806656*sqrt(6)*Z/19073486328125;
    Q(3,1)( 0,3 )= 39*Z/32768*sqrt(2);
    Q(3,1)( 1,0 )= 376832*Z/129140163;
    Q(3,1)( 1,1 )= 31363072*sqrt(2)*Z/4202539929;
    Q(3,1)( 1,2 )= 14739259392*sqrt(3)*Z/6131066257801;
    Q(3,1)( 1,3 )= 424*Z/177147;
    Q(3,1)( 2,0)= 487489536*sqrt(6)*Z/762939453125;
    Q(3,1)( 2,1 )= 55508689880137728*sqrt(3)*Z/5049196699148208943;
    Q(3,1)(2,2 )= 69158928384*sqrt(2)*Z/34271896307633;
    Q(3,1)( 2,3 )= 145503*sqrt(3/2)*Z/134217728;
    Q(3,1)( 3,0 )= 5053*Z/3538944*sqrt(2);
    Q(3,1)( 3,1 )= 4043*Z/78732;
    Q(3,1)( 3,2 )= 2496169683*sqrt(3/2)*Z/1677721600000;
    Q(3,1)( 3,3)= 21252608*sqrt(2)*Z/35595703125;
    Q(3,2)(0,0 )= 1808400384*sqrt(3)*Z/852891037441;
    Q(3,2)( 0,1 )= 10148806656*sqrt(6)*Z/19073486328125;
    Q(3,2)( 0,2 )= 90581886173184*Z/129457847542653125;
    Q(3,2)( 0,3 )= 74450880*sqrt(3)*Z/285311670611;
    Q(3,2)( 1,0 )= 423788544*sqrt(6)*Z/762939453125;
    Q(3,2)( 1,1 )= 14739259392*sqrt(3)*Z/6131066257801;
    Q(3,2)(1,2 )= 36645380390912*sqrt(2)*Z/24984212408264457;
    Q(3,2)( 1,3 )= 145503*sqrt(3/2)*Z/134217728;
    Q(3,2)( 2,0)= 30254432256*Z/41426511213649;
    Q(3,2)( 2,1 )= 69158928384*sqrt(2)*Z/34271896307633;
    Q(3,2)( 2,2 )= 2486755845603328*Z/158298797548828125*sqrt(3);
    Q(3,2)( 2,3 )= 2560158144*Z/678223072849;
    Q(3,2)( 3,0 )= 1243165779*sqrt(3)*Z/4564986729776;
    Q(3,2)( 3,1 )= 2496169683*sqrt(3/2)*Z/1677721600000;
    Q(3,2)( 3,2 )= 621550729*Z/13841287201;
    Q(3,2)( 3,3)= 413631006610176000.0*sqrt(3.0)*Z/249430673908303812379.0;
    Q(3,3)( 0,0 )= 22848*Z/9765625;
    Q(3,3)( 0,1 )= 39*Z/32768*sqrt(2);
    Q(3,3)( 0,2 )= 74450880*sqrt(3)*Z/285311670611;
    Q(3,3)( 0,3 )= 1804351488*Z/6179146071875;
    Q(3,3)( 1,0 )= 39*Z/32768*sqrt(2);
    Q(3,3)( 1,1 )= 424*Z/177147;
    Q(3,3)( 1,2 )= 145503*sqrt(3/2)*Z/134217728;
    Q(3,3 )(1,3 )= 21252608*sqrt(2)*Z/35595703125;
    Q(3,3)( 2,0)= 74450880*sqrt(3)*Z/285311670611;
    Q(3,3)( 2,1 )= 145503*sqrt(3/2)*Z/134217728;
    Q(3,3)( 2,2 )= 2560158144*Z/678223072849;
    Q(3,3)( 2,3 )= 413631006610176000.0*sqrt(3.0)*Z/249430673908303812379.0;
    Q(3,3)( 3,0 )= 1804351488*Z/6179146071875;
    Q(3,3)( 3,1 )= 21252608*sqrt(2)*Z/35595703125;
    Q(3,3)( 3,2 )= 413631006610176000*sqrt(3.0)*Z/249430673908303812379.0;
    Q(3,3)(3,3)= 19541*Z/524288;

    return Q;
}



















